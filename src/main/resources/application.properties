
server.port=8924
fxft.jdbc.debug=true

spring.main.allow-bean-definition-overriding=true
#\u8FD9\u8FB9\u662Fmybatis\u6B63\u89C4\u7684\u914D\u7F6E
#mybatis.type-aliases-package=com.hzz.hzzcloud.freemarker.main.maparea.entity
#mybatis.mapper-locations= classpath:mybatis_mysql/*.xml
#
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://172.16.8.96:3306/subiaodb?autoReconnect=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true&useSSL=false
#spring.datasource.username=ascs
#spring.datasource.password=96bcnJ6ifCz7NBHpjhB1ZA45


#
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/jfinal_demo?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=
#
#
## Hikari will use the above plus the following to setup connection pooling
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.hikari.minimum-idle=5
#spring.datasource.hikari.maximum-pool-size=10
#spring.datasource.hikari.auto-commit=true
#spring.datasource.hikari.idle-timeout=300
#spring.datasource.hikari.pool-name=DatebookHikariCP
#spring.datasource.hikari.max-lifetime=180
#spring.datasource.hikari.connection-timeout=300
#spring.datasource.hikari.validationTimeout=300
#spring.datasource.hikari.connection-test-query=SELECT 1



# mybatis config
#mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
#mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.configuration.call-setters-on-nulls=true


#server.port=2005
#unit.type=SerReport
#unit.profile=
#
#kafkaComsumer.threadPool=10

##\uFFFD\uFFFD\uFFFD\uFFFD
##spring.activemq.broker-url=tcp://127.0.0.1:61616
##\uFFFD\uFFFD\uFFFD\uFFFD
#spring.activemq.broker-url=tcp://172.30.102.21:61616
#spring.jms.pub-sub-domain=true
#
#activemq.vehicleChangeTopic=vehicleTopic
#activemq.terminalChangeTopic=terminalTopic
#
##============== kafka ===================
## \u05B8\uFFFD\uFFFDkafka \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05B7\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0536\uFFFD\uFFFD
##spring.kafka.bootstrap-servers=172.30.101.227:9092
#spring.kafka.bootstrap-servers=112.124.202.93:9092
#
##=============== provider  =======================
#spring.kafka.producer.retries=0
## \u00FF\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u03E2\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432
## \u05B8\uFFFD\uFFFD\uFFFD\uFFFD\u03E2key\uFFFD\uFFFD\uFFFD\uFFFD\u03E2\uFFFD\uFFFD\u0131\uFFFD\uFFFD\uFFFD\uBDFD\u02BD
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
#
##=============== consumer  =======================
## \u05B8\uFFFD\uFFFD\u012C\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFDgroup id
#spring.kafka.consumer.group-id=cid_report
#spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100
#spring.kafka.consumer.max-poll-records=20971520
## \u05B8\uFFFD\uFFFD\uFFFD\uFFFD\u03E2key\uFFFD\uFFFD\uFFFD\uFFFD\u03E2\uFFFD\uFFFD\u0131\uFFFD\uFFFD\uFFFD\uBDFD\u02BD
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
##=======set comsumer max fetch.byte 2*1024*1024=============












